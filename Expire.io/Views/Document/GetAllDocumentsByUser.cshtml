
@{
    ViewData["Title"] = "GetAllDocumentsByUser";
}
@model List<Expire.io.DTOs.DocumentDTO>
<div class="row" style="position: relative; margin-top: 20px;">
    <div class="col-md-6">
        <div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-outline-secondary" onclick="filterElement(this)" doc_type="license">License</button>
            <button type="button" class="btn btn-outline-secondary" onclick="filterElement(this)" doc_type="insurance">Insurance</button>
            <button type="button" class="btn btn-outline-secondary" onclick="filterElement(this)" doc_type="sertificate">Sertificate</button>
        </div>
    </div>
    <div class="col-md-2">
        <button type="button" class="btn btn-danger" onclick="notifyUser()" doc_type="license">Notify user</button>
    </div>
    <div class="col-md-4">
        <div class="input-group mb-3">
            <input type="text" class="form-control" id="documentSearch" placeholder="Document name" aria-label="Document name" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" onclick="findByFilter()">Search</button>
            </div>
        </div>
    </div>
</div>
<h3>Documents by @ViewBag.UserName</h3>
<div class="row" id="shuffleContainer" style="margin-bottom: 40px;">
    @{
        for (int i = 0; i < @Model.Count; ++i)
        {
            if (@Model[i].TypeOfDocName.ToLower() == "license")
            {
                <div class="col-md-3 filterItem" data-group='license' id="document_@Model[i].Id">
                    <div class="card shadow" onclick="getDocumentInfo(@Model[i].Id)">
                        <img class="card-img-top" src="data:image/jpeg;base64,@Model[i].Image.ToString()" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@Model[i].TypeOfDocName</h5>
                            <p class="card-text">@Model[i].Name</p>
                            @{
                                if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays > 14)
                                {
                                    <hr style="border-color: green; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 3)
                                {
                                    <hr style="border-color: red; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 14)
                                {
                                    <hr style="border-color: orange; border-width: 4px" />
                                }
                            }
                        </div>
                    </div>
                </div>
            }
            else if (@Model[i].TypeOfDocName.ToLower() == "insurance")
            {
                <div class="col-md-3 filterItem" data-group='insurance' id="document_@Model[i].Id">
                    <div class="card shadow" onclick="getDocumentInfo(@Model[i].Id)">
                        <img class="card-img-top" src="data:image/jpeg;base64,@Model[i].Image." alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@Model[i].TypeOfDocName</h5>
                            <p class="card-text">@Model[i].Name</p>
                            @{
                                if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays > 14)
                                {
                                    <hr style="border-color: green; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 3)
                                {
                                    <hr style="border-color: red; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 14)
                                {
                                    <hr style="border-color: orange; border-width: 4px" />
                                }
                            }
                        </div>
                    </div>
                </div>
            }
            else if (@Model[i].TypeOfDocName.ToLower() == "sertificate")
            {
                <div class="col-md-3 filterItem" data-group='sertificate' id="document_@Model[i].Id">
                    <div class="card shadow" onclick="getDocumentInfo(@Model[i].Id)">
                        <img class="card-img-top" src="data:image/jpeg;base64,@Model[i].Image.ToString()" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@Model[i].TypeOfDocName</h5>
                            <p class="card-text">@Model[i].Name</p>
                            @{
                                if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays > 14)
                                {
                                    <hr style="border-color: green; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 3)
                                {
                                    <hr style="border-color: red; border-width: 4px" />
                                }
                                else if ((@Model[i].DateOfExpiry.Value.Date - DateTime.Now.Date).TotalDays < 14)
                                {
                                    <hr style="border-color: orange; border-width: 4px" />
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Modal Header</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="documentInfo" role="dialog">
    <div id="documentInfoContent" class="modal-dialog modal-dialog-centered" style="max-width: 650px;">
    </div>
</div>

<script>
    gridContainer = $("#shuffleContainer");
    var sizer = gridContainer.find(".col-md-3");
    var shuffleInstance = new Shuffle(gridContainer, {

        itemSelector: '.filterItem',
        sizer: sizer // could also be a selector: '.my-sizer-element'
    });

    //let searchDocument = $("#documentSearch")[0];
    //searchDocument.addEventListener('input', function () {
    //    console.log(searchDocument.value);
    //    var searchText = searchDocument.value.toLowerCase();

    //    let button1 = $("[doc_type='license']");
    //    let button2 = $("[doc_type='insurance']");
    //    let button3 = $("[doc_type='sertificate']");
    //    button1[0].className = "btn btn-outline-secondary";
    //    button2[0].className = "btn btn-outline-secondary";
    //    button3[0].className = "btn btn-outline-secondary";

    //    shuffleInstance.filter(function (element) {
    //        var titleElement = element.querySelector('.card-title');
    //        var titleText = titleElement.textContent.toLowerCase().trim();

    //        return titleText.indexOf(searchText) !== -1;
    //    });
    //});
</script>

